{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The Azure Region to use"
            }
        },
        "availabilityZoneCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "The number of Availability Zones to use"
            }
        },
        "virtualNetworkName": {
            "defaultValue": "vnet-hanva",
            "type": "String",
            "metadata": {
                "description": "Name of the VNET for all resources"
            }
        },
        "vnetPrefix": {
            "defaultValue": "10.0.0.0/16",
            "type": "String",
            "metadata": {
                "description": "CIDR address space definition for VNet"
            }
        },
        "dmzSubnetPrefix": {
            "defaultValue": "10.0.0.64/27",
            "type": "String",
            "metadata": {
                "description": "CIDR address prefix definition for DMZ subnet"
            }
        },
        "webSubnetPrefix": {
            "defaultValue": "10.0.1.0/24",
            "type": "String",
            "metadata": {
                "description": "CIDR address prefix definition for web subnet"
            }
        },
        "appGatewaySubnetPrefix": {
            "defaultValue": "10.0.252.224/27",
            "type": "String",
            "metadata": {
                "description": "CIDR address prefix definition for AppGateway subnet"
            }
        },
        "bastionSubnetPrefix": {
            "defaultValue": "10.0.253.224/27",
            "type": "String",
            "metadata": {
                "description": "CIDR address prefix definition for Bastion subnet"
            }
        },
        "gatewaySubnetPrefix": {
            "defaultValue": "10.0.255.224/27",
            "type": "String",
            "metadata": {
                "description": "CIDR address prefix definition for Gateway subnet"
            }
        },
        "operatingSystemImage": {
            "type": "string",
            "defaultValue": "CentOS 7 (latest, LVM)",
            "allowedValues": [
                "CentOS 7 (latest, LVM)",
                "Red Hat Enterprise Linux 7 (latest, LVM)"
            ],
            "metadata": {
                "description": "OS Image to use for all VMs"
            }
        },
        "adminUserForVMAccess": {
            "type": "String",
            "metadata": {
                "description": "Admin User for all VMs"
            }
        },
        "passphraseForSshKey": {
            "type": "securestring",
            "minLength": 6,
            "maxLength": 64,
            "metadata": {
                "description": "Passphrase to access SSH key (new key will be stored in Key Vault)"
            }
        },
        "nvaNetworkSecurityGroupName": {
            "defaultValue": "nsg-NVA",
            "type": "String",
            "metadata": {
                "description": "Name of the Network Security Group for the NVA resources"
            }
        },
        "nvaVMNameBase": {
            "defaultValue": "vm-nva",
            "type": "String",
            "metadata": {
                "description": "Prefix for naming NVA VMs"
            }
        },
        "nvaVMCount": {
            "defaultValue": 2,
            "type": "Int",
            "allowedValues": [
                1,
                2,
                3,
                4,
                5
            ],
            "metadata": {
                "description": "How many NVA VMs to provision"
            }
        },
        "nvaVMSize": {
            "defaultValue": "Standard_D2s_v3",
            "type": "String",
            "allowedValues": [
                "Standard_D2s_v3",
                "Standard_D4s_v3"
            ],
            "metadata": {
                "description": "VM size for NVA VMs"
            }
        },
        "webNetworkSecurityGroupName": {
            "defaultValue": "nsg-Web",
            "type": "String",
            "metadata": {
                "description": "Name of the Network Security Group for the web resources"
            }
        },
        "webVMNameBase": {
            "defaultValue": "vm-web",
            "type": "String",
            "metadata": {
                "description": "Prefix for naming web VMs"
            }
        },
        "webVMCount": {
            "defaultValue": 2,
            "type": "Int",
            "minValue": 0,
            "maxValue": 20,
            "metadata": {
                "description": "How many web VMs to provision"
            }
        },
        "webVMSize": {
            "defaultValue": "Standard_D2s_v3",
            "type": "String",
            "allowedValues": [
                "Standard_D2s_v3",
                "Standard_D4s_v3"
            ],
            "metadata": {
                "description": "VM size for NVA VMs"
            }
        },
        "dmzNetworkSecurityGroupName": {
            "defaultValue": "nsg-DMZ",
            "type": "String",
            "metadata": {
                "description": "Name of the Network Security Group for the DMZ Resources"
            }
        },
        "allowDmzConnectionFromIPOrCIDRBlock": {
            "defaultValue": "0.0.0.0/0",
            "type": "string",
            "metadata": {
                "description": "Default value of 0.0.0.0/0 allows management and connections from the entire Internet"
            }
        },
        "deployAzureBastionDmz": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "Selection to deploy Azure Bastion"
            }
        },
        "deployAppGatewayDmz": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "Selection to deploy Azure Application Gateway for the NVA VMs"
            }
        },
        "deployLoadBalancerWeb": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "Selection to deploy Azure Application Gateway for the web VMs"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            },
            "defaultValue": "https://raw.githubusercontent.com/hallihan/samples/testing/solutions/ha-nva/layer-7-ingress/azuredeploy.json"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation"
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "ostag": "[if(equals(parameters('operatingSystemImage'),'Red Hat Enterprise Linux 7 (latest, LVM)'),'RH7x','Cent7x')]",
        "osProfile": {
            "RH7x": {
                "image": {
                    "publisher": "RedHat",
                    "offer": "RHEL",
                    "sku": "7-LVM",
                    "version": "latest"
                }
            },
            "Cent7x": {
                "image": {
                    "offer": "CentOS-LVM",
                    "publisher": "OpenLogic",
                    "sku": "7-LVM",
                    "version": "latest"
                }
            }
        },
        "postInstallActions": {
            "web": {
                "commandToExecute": "sh simpleweb.sh",
                "fileUris": [
                    "[uri(parameters('_artifactsLocation'), concat('scripts/simpleweb.sh', parameters('_artifactsLocationSasToken')))]"
                ]
            },
            "nva": {
                "commandToExecute": "sh simpleproxy.sh",
                "fileUris": [
                    "[uri(parameters('_artifactsLocation'), concat('scripts/simpleproxy.sh', parameters('_artifactsLocationSasToken')))]"
                ]
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-12-01",
            "name": "[parameters('webNetworkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowHTTPfromDMZtoWeb",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "[parameters('dmzSubnetPrefix')]",
                            "destinationAddressPrefix": "[parameters('webSubnetPrefix')]",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowHTTPfromAzureLoadBalancertoWeb",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "[parameters('webSubnetPrefix')]",
                            "access": "Allow",
                            "priority": 105,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowSSHfromBastiontoWeb",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[parameters('bastionSubnetPrefix')]",
                            "destinationAddressPrefix": "[parameters('webSubnetPrefix')]",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAll",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 4000,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-12-01",
            "name": "[parameters('nvaNetworkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowHTTPfromAppGatewaytoNVA",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "[parameters('appGatewaySubnetPrefix')]",
                            "destinationAddressPrefix": "[parameters('dmzSubnetPrefix')]",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowSSHfromBastiontoNVA",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[parameters('bastionSubnetPrefix')]",
                            "destinationAddressPrefix": "[parameters('dmzSubnetPrefix')]",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAll",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 4000,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-12-01",
            "name": "[parameters('dmzNetworkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow_http_from_ip_or_range_forwebhttp",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "[parameters('AllowDmzConnectionFromIPorCIDRBlock')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 500,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow_https_from_ip_or_range_for_bastion",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "[parameters('AllowDmzConnectionFromIPorCIDRBlock')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 520,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow_ssh_to_vnet_for_bastion",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 530,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "allow_rdp_to_vnet_for_bastion",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 540,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "allow_https_to_azurecloud_for_bastion",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 550,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "allow_management_from_gateway_manager_for_appgateway",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "65200-65535",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 560,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow_https_from_gateway_manager_for_appgateway",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 570,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[parameters('deployAppGatewayDmz')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "ParameterizedAppGateway",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', 'pip-appgateway-hanva')]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nested/paramappgateway.json', parameters('_artifactsLocationSasToken')))]"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "appgateway_name": {
                        "value": "ag-dmz"
                    },
                    "public_ip": {
                        "value": "[resourceId('Microsoft.Network/publicIPAddresses', 'pip-appgateway-hanva')]"
                    },
                    "vnet_name": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "vnet_subnet_name": {
                        "value": "ApplicationGatewaySubnet"
                    }
                }
            }
        },
        {
            "condition": "[parameters('deployLoadBalancerWeb')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "ParameterizedLoadBalancer",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nested/paramlb.json', parameters('_artifactsLocationSasToken')))]"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "loadbalancer_name": {
                        "value": "lb-web"
                    },
                    "vnet_name": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "vnet_subnet_name": {
                        "value": "snet-web"
                    }
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2019-09-01",
            "name": "[concat('kv-hanva-',uniqueString(resourceGroup().id))]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "Standard",
                    "family": "A"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": []
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "StoreSshKeyinVault",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', concat('kv-hanva-',uniqueString(resourceGroup().id)))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nested/storekeyinkeyvault.json', parameters('_artifactsLocationSasToken')))]"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "passPhrase": {
                        "value": "[parameters('passphraseForSshKey')]"
                    },
                    "vaultName": {
                        "value": "[concat('kv-hanva-',uniqueString(resourceGroup().id))]"
                    },
                    "secretName": {
                        "value": "sshKeyForHANVAVMAccess"
                    },
                    "vaultResourceGroup": {
                        "value": "[resourceGroup().name]"
                    },
                    "vaultSubscriptionId": {
                        "value": "[subscription().subscriptionId]"
                    },
                    "sshGenScript":{
                        "value": "[uri(parameters('_artifactsLocation'), concat('scripts/new-ssh-key.sh', parameters('_artifactsLocationSasToken')))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[concat('ParameterizedNvaVM-', copyIndex())]",
            "copy": {
                "name": "ParameterizedNvaVM-Copy",
                "count": "[parameters('nvaVMCount')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
                "[resourceId('Microsoft.Resources/deployments', 'ParameterizedAppGateway')]",
                "[resourceId('Microsoft.Resources/deployments', 'ParameterizedLoadBalancer')]",
                "[resourceId('Microsoft.Resources/deployments', 'StoreSshKeyinVault')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nested/paramvm.json', parameters('_artifactsLocationSasToken')))]"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vm_name": {
                        "value": "[concat(parameters('nvaVMNameBase'),'-', copyIndex())]"
                    },
                    "vm_size": {
                        "value": "[parameters('nvaVMSize')]"
                    },
                    "admin_user": {
                        "value": "[parameters('adminUserForVMAccess')]"
                    },
                    "ssh_pub_key": {
                        "value": "[reference('StoreSshKeyinVault').outputs.outputs.value]"
                    },
                    "vnet_name": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "vnet_subnet_name": {
                        "value": "snet-dmz"
                    },
                    "os_image": {
                        "value": "[variables('osProfile')[variables('ostag')]['image']]"
                    },
                    "post_install_actions": {
                        "value": {
                            "commandToExecute": "[concat(variables('postInstallActions')['nva'].commandToExecute,' ',string(reference('ParameterizedLoadBalancer').outputs.privateIp.value))]",
                            "fileUris": "[variables('postInstallActions')['nva'].fileUris]"
                        }

                    },
                    "publicip_id_or_empty": {
                        "value": ""
                    },
                    "loadbalancerbackend_id_or_empty": {
                        "value": "[if(parameters('deployAppGatewayDmz'),resourceId('Microsoft.Network/applicationGateways/backendAddressPools', 'ag-dmz', 'default-backend'),'')]"
                    },
                    "availabilityzone": {
                        "value": "[add(1,mod(copyIndex(),parameters('availabilityZoneCount')))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[concat('ParameterizedWebVM-', copyIndex())]",
            "copy": {
                "name": "ParameterizedWebVM-Copy",
                "count": "[parameters('webVMCount')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
                "[resourceId('Microsoft.Resources/deployments', 'ParameterizedLoadBalancer')]",
                "[resourceId('Microsoft.Resources/deployments', 'StoreSshKeyinVault')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nested/paramvm.json', parameters('_artifactsLocationSasToken')))]"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vm_name": {
                        "value": "[concat(parameters('webVMNameBase'),'-', copyIndex())]"
                    },
                    "vm_size": {
                        "value": "[parameters('webVMSize')]"
                    },
                    "admin_user": {
                        "value": "[parameters('adminUserForVMAccess')]"
                    },
                    "ssh_pub_key": {
                        "value": "[reference('StoreSshKeyinVault').outputs.outputs.value]"
                    },
                    "vnet_name": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "vnet_subnet_name": {
                        "value": "snet-web"
                    },
                    "os_image": {
                        "value": "[variables('osProfile')[variables('ostag')]['image']]"
                    },
                    "post_install_actions": {
                        "value": "[variables('postInstallActions')['web']]"
                    },
                    "publicip_id_or_empty": {
                        "value": ""
                    },
                    "loadbalancerbackend_id_or_empty": {
                        "value": "[if(parameters('deployLoadBalancerWeb'),resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'lb-web', 'default-backend'),'')]"
                    },
                    "availabilityzone": {
                        "value": "[add(1,mod(copyIndex(),parameters('availabilityZoneCount')))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-12-01",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('webNetworkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('dmzNetworkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nvaNetworkSecurityGroupName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[parameters('gatewaySubnetPrefix')]"
                        }
                    },
                    {
                        "name": "ApplicationGatewaySubnet",
                        "properties": {
                            "addressPrefix": "[parameters('appGatewaySubnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('dmzNetworkSecurityGroupName'))]"
                            }
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('bastionSubnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('dmzNetworkSecurityGroupName'))]"
                            }
                        }
                    },
                    {
                        "name": "snet-dmz",
                        "properties": {
                            "addressPrefix": "[parameters('dmzSubnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('dmzNetworkSecurityGroupName'))]"
                            }
                        }
                    },
                    {
                        "name": "snet-web",
                        "properties": {
                            "addressPrefix": "[parameters('webSubnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('webNetworkSecurityGroupName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "condition": "[parameters('deployAzureBastionDmz')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-12-01",
            "name": "pip-bastion-hanva",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "condition": "[parameters('deployAppGatewayDmz')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-12-01",
            "name": "pip-appgateway-hanva",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "condition": "[parameters('deployAzureBastionDmz')]",
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2019-12-01",
            "name": "bastion-hanva",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'pip-bastion-hanva')]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), 'AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            }
        }
    ]
}